//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

#pragma warning disable 1573, 1591

using System;
using System.Collections.Generic;
using System.Linq;

using LinqToDB;
using LinqToDB.Configuration;
using LinqToDB.Mapping;

namespace DataModels
{
	/// <summary>
	/// Database       : p684612_tema
	/// Data Source    : p684612.mysql.ihc.ru
	/// Server Version : 8.0.36-28
	/// </summary>
	public partial class P684612TemaDB : LinqToDB.Data.DataConnection
	{
		public ITable<Attraction> Attractions { get { return this.GetTable<Attraction>(); } }
		public ITable<Client>     Clients     { get { return this.GetTable<Client>(); } }
		public ITable<Employee>   Employees   { get { return this.GetTable<Employee>(); } }
		public ITable<Position>   Positions   { get { return this.GetTable<Position>(); } }
		public ITable<Ticket>     Tickets     { get { return this.GetTable<Ticket>(); } }
		public ITable<Ticketitem> Ticketitems { get { return this.GetTable<Ticketitem>(); } }

		public P684612TemaDB()
		{
			InitDataContext();
			InitMappingSchema();
		}

		public P684612TemaDB(string configuration)
			: base(configuration)
		{
			InitDataContext();
			InitMappingSchema();
		}

		public P684612TemaDB(DataOptions options)
			: base(options)
		{
			InitDataContext();
			InitMappingSchema();
		}

		public P684612TemaDB(DataOptions<P684612TemaDB> options)
			: base(options.Options)
		{
			InitDataContext();
			InitMappingSchema();
		}

		partial void InitDataContext  ();
		partial void InitMappingSchema();
	}

	[Table("attraction")]
	public partial class Attraction
	{
		[PrimaryKey, Identity   ] public int    AttractionId   { get; set; } // int
		[Column,     NotNull    ] public string NameAttraction { get; set; } // varchar(50)
		[Column,     NotNull    ] public int    Capacity       { get; set; } // int
		[Column,     NotNull    ] public double Price          { get; set; } // double
		[Column,        Nullable] public string Description    { get; set; } // text

		#region Associations

		/// <summary>
		/// Employee_ibfk_2_BackReference (employee)
		/// </summary>
		[Association(ThisKey="AttractionId", OtherKey="AttractionId", CanBeNull=true)]
		public IEnumerable<Employee> Employeeibfks { get; set; }

		/// <summary>
		/// TicketItem_ibfk_2_BackReference (ticketitem)
		/// </summary>
		[Association(ThisKey="AttractionId", OtherKey="AttractionId", CanBeNull=true)]
		public IEnumerable<Ticketitem> TicketItemibfks { get; set; }

		#endregion
	}

	[Table("client")]
	public partial class Client
	{
		[PrimaryKey, Identity] public int       ClientId { get; set; } // int
		[Column,     Nullable] public string    Surname  { get; set; } // varchar(50)
		[Column,     Nullable] public string    Name     { get; set; } // varchar(50)
		[Column,     Nullable] public string    Lastname { get; set; } // varchar(50)
		[Column,     Nullable] public DateTime? Birthday { get; set; } // date
		[Column,     Nullable] public char?     Gender   { get; set; } // varchar(1)
		[Column,     Nullable] public string    Phone    { get; set; } // varchar(12)
		[Column,     Nullable] public string    Email    { get; set; } // varchar(50)

		#region Associations

		/// <summary>
		/// Ticket_ibfk_1_BackReference (ticket)
		/// </summary>
		[Association(ThisKey="ClientId", OtherKey="ClientId", CanBeNull=true)]
		public IEnumerable<Ticket> Ticketibfks { get; set; }

		#endregion
	}

	[Table("employee")]
	public partial class Employee
	{
		[PrimaryKey, Identity] public int       EmployeeId   { get; set; } // int
		[Column,     Nullable] public string    Surname      { get; set; } // varchar(50)
		[Column,     Nullable] public string    Name         { get; set; } // varchar(50)
		[Column,     Nullable] public string    Lastname     { get; set; } // varchar(50)
		[Column,     Nullable] public DateTime? Birthday     { get; set; } // date
		[Column,     Nullable] public char?     Gender       { get; set; } // varchar(1)
		[Column,     Nullable] public string    Phone        { get; set; } // varchar(12)
		[Column,     Nullable] public string    Email        { get; set; } // varchar(50)
		[Column,     Nullable] public string    Adress       { get; set; } // varchar(100)
		[Column,     Nullable] public int?      PositionId   { get; set; } // int
		[Column,     Nullable] public int?      AttractionId { get; set; } // int

		#region Associations

		/// <summary>
		/// Employee_ibfk_2 (attraction)
		/// </summary>
		[Association(ThisKey="AttractionId", OtherKey="AttractionId", CanBeNull=true)]
		public Attraction Attraction { get; set; }

		/// <summary>
		/// Employee_ibfk_1 (position)
		/// </summary>
		[Association(ThisKey="PositionId", OtherKey="PositionId", CanBeNull=true)]
		public Position Position { get; set; }

		#endregion
	}

	[Table("position")]
	public partial class Position
	{
		[PrimaryKey, Identity] public int    PositionId   { get; set; } // int
		[Column,     NotNull ] public string NamePosition { get; set; } // varchar(50)

		#region Associations

		/// <summary>
		/// Employee_ibfk_1_BackReference (employee)
		/// </summary>
		[Association(ThisKey="PositionId", OtherKey="PositionId", CanBeNull=true)]
		public IEnumerable<Employee> Employeeibfks { get; set; }

		#endregion
	}

	[Table("ticket")]
	public partial class Ticket
	{
		[PrimaryKey, Identity] public int       TicketId    { get; set; } // int
		[Column,     Nullable] public int?      ClientId    { get; set; } // int
		[Column,     Nullable] public string    Status      { get; set; } // varchar(20)
		[Column,     Nullable] public DateTime? DatePayment { get; set; } // date

		#region Associations

		/// <summary>
		/// Ticket_ibfk_1 (client)
		/// </summary>
		[Association(ThisKey="ClientId", OtherKey="ClientId", CanBeNull=true)]
		public Client Client { get; set; }

		/// <summary>
		/// TicketItem_ibfk_1_BackReference (ticketitem)
		/// </summary>
		[Association(ThisKey="TicketId", OtherKey="TicketId", CanBeNull=true)]
		public IEnumerable<Ticketitem> TicketItemibfks { get; set; }

		#endregion
	}

	[Table("ticketitem")]
	public partial class Ticketitem
	{
		[PrimaryKey, Identity] public int  TicketItemId { get; set; } // int
		[Column,     Nullable] public int? TicketId     { get; set; } // int
		[Column,     Nullable] public int? AttractionId { get; set; } // int
		[Column,     Nullable] public int? Quantity     { get; set; } // int

		#region Associations

		/// <summary>
		/// TicketItem_ibfk_2 (attraction)
		/// </summary>
		[Association(ThisKey="AttractionId", OtherKey="AttractionId", CanBeNull=true)]
		public Attraction Attraction { get; set; }

		/// <summary>
		/// TicketItem_ibfk_1 (ticket)
		/// </summary>
		[Association(ThisKey="TicketId", OtherKey="TicketId", CanBeNull=true)]
		public Ticket Ticket { get; set; }

		#endregion
	}

	public static partial class TableExtensions
	{
		public static Attraction Find(this ITable<Attraction> table, int AttractionId)
		{
			return table.FirstOrDefault(t =>
				t.AttractionId == AttractionId);
		}

		public static Client Find(this ITable<Client> table, int ClientId)
		{
			return table.FirstOrDefault(t =>
				t.ClientId == ClientId);
		}

		public static Employee Find(this ITable<Employee> table, int EmployeeId)
		{
			return table.FirstOrDefault(t =>
				t.EmployeeId == EmployeeId);
		}

		public static Position Find(this ITable<Position> table, int PositionId)
		{
			return table.FirstOrDefault(t =>
				t.PositionId == PositionId);
		}

		public static Ticket Find(this ITable<Ticket> table, int TicketId)
		{
			return table.FirstOrDefault(t =>
				t.TicketId == TicketId);
		}

		public static Ticketitem Find(this ITable<Ticketitem> table, int TicketItemId)
		{
			return table.FirstOrDefault(t =>
				t.TicketItemId == TicketItemId);
		}
	}

    public class EmployeeDto
    {
        public int EmployeeId { get; set; }
        public string Surname { get; set; }
        public string Name { get; set; }
        public string Lastname { get; set; }
        public DateTime Birthday { get; set; }
        public char? Gender { get; set; }
        public string Phone { get; set; }
        public string Email { get; set; }
        public string Adress { get; set; }
        public int? PositionId { get; set; }
        public int? AttractionId { get; set; }
    }

    public class ClientDto
    {
        public int ClientId { get; set; }
        public string Surname { get; set; }
        public string Name { get; set; }
        public string Lastname { get; set; }
        public DateTime? Birthday { get; set; }
        public char? Gender { get; set; }
        public string Phone { get; set; }
        public string Email { get; set; }
    }

    public class AttractionDto
    {
        public int AttractionId { get; set; }
        public string NameAttraction { get; set; }
        public int Capacity { get; set; }
        public double Price { get; set; }
        public string Description { get; set; }
    }

    public class PositionDto
    {
        public int PositionId { get; set; }
        public string NamePosition { get; set; }
    }

    public class TicketDto
    {
        public int TicketId { get; set; }
        public int? ClientId { get; set; }
        public string Status { get; set; }
        public DateTime? DatePayment { get; set; }
    }

    public class TicketitemDto
    {
        public int TicketItemId { get; set; }
        public int? TicketId { get; set; }
        public int? AttractionId { get; set; }
        public int? Quantity { get; set; }
        public string AttractionName { get; set; }
        public double Price { get; set; }
    }

    public class TicketWithItemsDto
    {
        public int TicketId { get; set; }
        public int? ClientId { get; set; }
        public string Status { get; set; }
        public DateTime? DatePayment { get; set; }
        public List<TicketitemDto> TicketItems { get; set; } = new List<TicketitemDto>();
    }

    public class TicketResponseDto
    {
        public int TicketId { get; set; }
        public int? ClientId { get; set; }
        public string Status { get; set; }
        public DateTime? DatePayment { get; set; }
        public List<TicketitemDto> TicketItems { get; set; } = new List<TicketitemDto>();
    }

    public class CreateTicketDto
    {
        public int? ClientId { get; set; }
        public string Status { get; set; }
        public DateTime? DatePayment { get; set; }
        public List<CreateTicketItemDto> TicketItems { get; set; } = new List<CreateTicketItemDto>();
    }

    public class CreateTicketItemDto
    {
        public int? AttractionId { get; set; }
        public int? Quantity { get; set; }
    }

}



